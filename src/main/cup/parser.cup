/* Parser.cup */
package ParserLexer;
import java_cup.runtime.*;

/*
   Este parser fue hecho así para validar la conexión con el scanner,
   implementando reglas de producción simples para comprobar el reconocimiento de tokens
   y la transición entre el análisis léxico y sintáctico.
*/


parser code {:
    // declaración del scanner
    private Lexer s;
    public Parser(Lexer s) { this.s = s; } // constructor

    public void syntax_error(Symbol s) { // manejo de errores - es solo de prueba por ahora
        System.err.println("Error de sintaxis en línea " + (s.left + 1) + ", columna " + (s.right + 1));
        System.err.println("Token inesperado: " + sym.terminalNames[s.sym]);
    }
:}

/* Inicialización */
scan with {: return s.next_token(); :};

/* terminales */
terminal IDENTIFICADOR, INTEGER, FLOAT, BOOL, BOOL_LITERAL, STRING, CHAR, L_INTEGER, FLOAT_LITERAL, CHAR_LITERAL, STRING_LITERAL;
terminal ASIGNA, SUMA, RESTA, DIVISION, MULTIPLICACION, MODULE, POTENCIA;
terminal INCREMENTO, DECREMENTO, MENOR, MENOROIGUAL, MAYOR, MAYOROIGUAL, IGUALDAD, DIFERENTE;
terminal CONJUNCION, DISYUNCION, NEGACION;
terminal IF, ELSE, WHILE, FOR, SWITCH, CASE, DEFAULT, BREAK, RETURN, DOS_PUNTOS;
terminal PRINT, READ, MAIN;
terminal ABRECUENTO, CIERRACUENTO, ABREREGALO, CIERRAREGALO, ABREEMPAQUE, CIERRAEMPAQUE;
terminal COMA, PUNTO_Y_COMA, UNKNOWN_TOKEN;

/* no terminales */
non terminal programa, lista_sentencias, sentencia, declaracion, operacion, control_estructuras, lista_parametros, arreglo, expresion, literal;

/* tipos adicionales */
non terminal lista_identificadores, lista_expresiones, tipo_dato, bloque;

/* Producción inicial */
start with programa;

/* Reglas de producción */
programa ::=
    lista_sentencias
    | /* epsilon */
    ;

lista_sentencias ::=
    lista_sentencias sentencia
    | sentencia
    ;

sentencia ::=
    INTEGER ASIGNA L_INTEGER
    {: System.out.println("Declaración válida: INTEGER entrega L_INTEGER"); :}
    | STRING ASIGNA L_INTEGER
    {: System.out.println("Declaración válida: STRING entrega L_INTEGER"); :}
    ;